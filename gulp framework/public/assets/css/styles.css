/* === Reset */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 0;
  padding: 0; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

address {
  font-style: normal; }

/* === Third party frameworks & libraries */
/* === Theme Variables */
/* Grid and commond widths configuration */
/* Mobile first breakpoints */
/* Default layout for site sections */
html, body {
  overflow-x: hidden;
  width: 100%; }

body {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 100%;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.page-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
          flex: 1 0 auto;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }
  .page-container > .section:not(.no-section-spacing) {
    padding-top: 25px;
    padding-bottom: 25px; }
    @media  (min-width: 768px) {
      .page-container > .section:not(.no-section-spacing) {
        padding-top: 30px;
        padding-bottom: 30px; } }
    @media  (min-width: 1024px) {
      .page-container > .section:not(.no-section-spacing) {
        padding-top: 60px;
        padding-bottom: 60px; } }

.section .inner, .header .inner {
  max-width: 1220px;
  margin-left: auto;
  margin-right: auto;
  padding: 0 20px; }
  .section .inner:after, .header .inner:after {
    content: " ";
    display: block;
    clear: both; }
  @media  (min-width: 768px) {
    .section .inner, .header .inner {
      padding: 0 25px; } }
  @media  (min-width: 1024px) {
    .section .inner, .header .inner {
      padding: 0 30px; } }

@font-face {
  font-family: 'neuzeit_grotesklight';
  src: url('../fonts/neuzeitgro-lig-webfont.eot');
  src: url('../fonts/neuzeitgro-lig-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/neuzeitgro-lig-webfont.woff2') format('woff2'), url('../fonts/neuzeitgro-lig-webfont.woff') format('woff'), url('../fonts/neuzeitgro-lig-webfont.ttf') format('truetype'), url('../fonts/neuzeitgro-lig-webfont.svg#neuzeit_grotesklight') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'neuzeit_groteskregular';
  src: url('../fonts/neuzeitgro-reg-webfont.eot');
  src: url('../fonts/neuzeitgro-reg-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/neuzeitgro-reg-webfont.woff2') format('woff2'), url('../fonts/neuzeitgro-reg-webfont.woff') format('woff'), url('../fonts/neuzeitgro-reg-webfont.ttf') format('truetype'), url('../fonts/neuzeitgro-reg-webfont.svg#neuzeit_groteskregular') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'neuzeit_groteskbold';
  src: url('../fonts/neuzeitgro-bol-webfont.eot');
  src: url('../fonts/neuzeitgro-bol-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/neuzeitgro-bol-webfont.woff2') format('woff2'), url('../fonts/neuzeitgro-bol-webfont.woff') format('woff'), url('../fonts/neuzeitgro-bol-webfont.ttf') format('truetype'), url('../fonts/neuzeitgro-bol-webfont.svg#neuzeit_groteskbold') format('svg');
  font-weight: normal;
  font-style: normal; }

html {
  font-family: "neuzeit_groteskregular";
  font-weight: normal;
  font-style: normal;
  color: #111;
  font-size: 16px; }

h1, h2, h3, h4, h5, h6 {
  font-family: "neuzeit_groteskbold";
  font-weight: normal;
  font-style: normal;
  color: #111;
  margin-bottom: 0.2em;
  line-height: 1.2em; }
  h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child {
    margin-top: 0; }

h1 {
  font-size: 70px; }
  @media  (min-width: 768px) {
    h1 {
      font-size: 70px; } }
  @media  (min-width: 1024px) {
    h1 {
      font-size: 70px; } }

h2 {
  font-size: 40px; }
  @media  (min-width: 768px) {
    h2 {
      font-size: 40px; } }
  @media  (min-width: 1024px) {
    h2 {
      font-size: 40px; } }

h3 {
  font-size: 22px; }
  @media  (min-width: 768px) {
    h3 {
      font-size: 26px; } }
  @media  (min-width: 1024px) {
    h3 {
      font-size: 30px; } }

h4 {
  font-size: 18px; }
  @media  (min-width: 768px) {
    h4 {
      font-size: 20px; } }
  @media  (min-width: 1024px) {
    h4 {
      font-size: 24px; } }

h5 {
  font-size: 18px; }
  @media  (min-width: 768px) {
    h5 {
      font-size: 19px; } }
  @media  (min-width: 1024px) {
    h5 {
      font-size: 20px; } }

h6 {
  display: inline;
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  margin: 0; }

p {
  font-size: 16px;
  line-height: 1.6em;
  margin: 0.8em 0; }

/* === Mixins & Helpers */
.centered {
  text-align: center; }

/* === Components */
.button {
  display: inline-block;
  background: #252525;
  font-size: 18px;
  color: #fff;
  border-radius: 2px; }

.diamond {
  position: relative;
  display: block;
  width: 100%;
  height: 1px;
  text-align: center;
  background: #000;
  margin: 30px 0; }
  @media  (min-width: 768px) {
    .diamond {
      margin: 30px 0; } }
  @media  (min-width: 1024px) {
    .diamond {
      margin: 30px 0; } }
  .diamond:after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
    background: #fff;
    border: 1px solid #000; }
  .diamond hr {
    display: none; }

.auction-app .bottle-pin-list {
  list-style: none;
  margin: 30px 0;
  padding: 0;
  font-size: 0; }
  .auction-app .bottle-pin-list .bottle-pin {
    display: inline-block;
    vertical-align: top;
    width: 10%;
    padding-top: 10%;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
    cursor: pointer; }
    .auction-app .bottle-pin-list .bottle-pin .number {
      -webkit-transition: all 0.5s ease-out;
      transition: all 0.5s ease-out;
      position: absolute;
      z-index: 2;
      left: 50%;
      top: 50%;
      display: block;
      width: 100%;
      height: auto;
      font-size: 12px;
      text-align: center;
      color: #fff;
      -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(0);
          -ms-transform: translate(-50%, -50%) rotate(-45deg) scale(0);
              transform: translate(-50%, -50%) rotate(-45deg) scale(0);
      opacity: 0; }
    .auction-app .bottle-pin-list .bottle-pin:after {
      -webkit-transition: all 0.5s ease-out;
      transition: all 0.5s ease-out;
      content: "";
      position: absolute;
      z-index: 1;
      left: 50%;
      top: 50%;
      display: block;
      width: 10px;
      height: 10px;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
      background: #333;
      border-radius: 0; }
    .auction-app .bottle-pin-list .bottle-pin:hover .number {
      opacity: 1;
      -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
          -ms-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
              transform: translate(-50%, -50%) rotate(-45deg) scale(1); }
    .auction-app .bottle-pin-list .bottle-pin:hover:after {
      width: 25px;
      height: 25px;
      border-radius: 100px; }
    .auction-app .bottle-pin-list .bottle-pin.disabled {
      cursor: default; }
      .auction-app .bottle-pin-list .bottle-pin.disabled .number {
        color: #e3e3e3;
        -webkit-transform: translate(-50%, -50%) rotate(-45deg);
            -ms-transform: translate(-50%, -50%) rotate(-45deg);
                transform: translate(-50%, -50%) rotate(-45deg); }
      .auction-app .bottle-pin-list .bottle-pin.disabled:after {
        background: #e3e3e3; }
      .auction-app .bottle-pin-list .bottle-pin.disabled:hover .number {
        opacity: 1; }
      .auction-app .bottle-pin-list .bottle-pin.disabled:hover:after {
        width: 10px;
        height: 10px;
        border-radius: 0; }
    .auction-app .bottle-pin-list .bottle-pin.active .number {
      opacity: 1;
      -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
          -ms-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
              transform: translate(-50%, -50%) rotate(-45deg) scale(1);
      color: #000; }
    .auction-app .bottle-pin-list .bottle-pin.active:after {
      width: 25px;
      height: 25px;
      border-radius: 100px;
      background: yellow;
      border: 1px solid #999; }

/* === Sections */
.site-header {
  font-size: 16px; }
  .site-header .site-logo {
    text-align: center; }
  .site-header .intro-text {
    font-size: 24px;
    text-align: center; }


/*# sourceMappingURL=data:application/json;base64, */
